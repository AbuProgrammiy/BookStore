@using BookStore.Domain.Entities
@model PaginationViewModel<Author>

<form id="searchForm" class="d-flex gap-2 mb-5" asp-controller="Authors" asp-action="SearchByName" method="get">
    <input type="search" id="searchInput" class="form-control" aria-describedby="search" name="name" placeholder="Enter author name...">
</form>

<script>
    document.addEventListener('DOMContentLoaded', 
    function () {
        const savedQuery = localStorage.getItem('searchQuery');
        if (savedQuery) {
            document.getElementById('searchInput').value = savedQuery;
        }

        document.getElementById('searchInput').focus();

        document.getElementById('searchInput').addEventListener('input', function () {
            const inputValue = this.value.trim();
            localStorage.setItem('searchQuery', inputValue);
            document.getElementById('searchForm').submit();
        });
    });
</script>


@if (User.Identity.IsAuthenticated)
{
    <br />
    <a asp-controller="Authors" asp-action="Create" class="btn btn-primary" >
        <i class='bx bx-plus'></i>
    </a>
}

<table class="table">
    <thead>
        <tr>
            <th scope="col">T/R</th>
            <th scope="col">Full name</th>
            <th scope="col">Description</th>
            @if (User.Identity.IsAuthenticated)
            {
                <th scope="col">Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int i = 0, rowNumber = Model.StartIndex + 1; i < Model.Objects.Count(); i++, rowNumber++)
        {
            <tr>
                <th scope="row">@rowNumber</th>
                <td>@Model.Objects[i].Name</td>
                <td>@Model.Objects[i].Description</td>
                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        <a asp-controller="Authors" asp-action="DeleteAuthor" asp-route-id="@Model.Objects[i].Id" class="btn btn-danger">
                            <i class='bx bxs-trash'></i>
                        </a>

                        <a asp-controller="Authors" asp-action="Update" asp-route-id="@Model.Objects[i].Id" class="btn btn-secondary">
                            <i class='bx bxs-edit-alt'></i>
                        </a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>



<!-- Pagination controls -->
@if (Model.TotalPages > 1)
{
    <div style="display: flex; justify-content: center; align-items: center; gap: 5px">
        @if (Model.CurrentPage == 1)
        {
            <div class="btn btn-primary">1</div>
        }

        @if (Model.SearchText != "" && Model.CurrentPage > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("SearchByName", new { name = Model.SearchText, page = Model.CurrentPage - 1 })"><i class='bx bx-chevrons-left bx-burst'></i></a>
        }

        @if (Model.SearchText == "" && Model.CurrentPage > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })"><i class='bx bx-chevrons-left bx-burst'></i></a>
        }

        @if (Model.SearchText != "" && Model.CurrentPage != 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("SearchByName", new { name = Model.SearchText, page = 1 })">1</a>
        }

        @if (Model.SearchText == "" && Model.CurrentPage != 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = 1 })">1</a>
        }

        @if (Model.CurrentPage > 2)
        {
            <span>...</span>
        }

        @for (int i = Model.CurrentPage - 1; i <= Model.CurrentPage + 1 && i <= Model.TotalPages; i++)
        {
            if (i > 1 && i < Model.TotalPages)
            {
                if (i == Model.CurrentPage)
                {
                    <div class="btn btn-primary">@i</div>
                }
                else if (Model.SearchText != "")
                {
                    <a class="btn btn-outline-primary" href="@Url.Action("SearchByName", new { name = Model.SearchText, page = i })">@i</a>
                }
                else
                {
                    <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = i })">@i</a>
                }
            }
        }

        @if (Model.CurrentPage < Model.TotalPages - 1)
        {
            <span>...</span>
        }

        @if (Model.SearchText != "" && Model.TotalPages != Model.CurrentPage && Model.TotalPages > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("SearchByName", new { name = Model.SearchText, page = Model.TotalPages })">@Model.TotalPages</a>
        }

        @if (Model.SearchText == "" && Model.TotalPages != Model.CurrentPage && Model.TotalPages > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.TotalPages })">@Model.TotalPages</a>
        }

        @if (Model.SearchText != "" && Model.CurrentPage < Model.TotalPages)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("SearchByName", new { name = Model.SearchText, page = Model.CurrentPage + 1 })"><i class='bx bx-chevrons-right bx-burst'></i></a>
        }

        @if (Model.SearchText == "" && Model.CurrentPage < Model.TotalPages)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })"><i class='bx bx-chevrons-right bx-burst'></i></a>
        }

        @if (Model.CurrentPage == Model.TotalPages)
        {
            <div class="btn btn-primary">@Model.CurrentPage</div>
        }
    </div>
}